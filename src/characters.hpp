#pragma once

#include <array>
#include <cstdint>

namespace sic {

namespace characters {

using data_t = std::array<std::uint16_t, 5>;

inline constexpr data_t CHAR_0 = {0xF0, 0x90, 0x90, 0x90, 0xF0};
inline constexpr data_t CHAR_1 = {0x20, 0x60, 0x20, 0x20, 0x70};
inline constexpr data_t CHAR_2 = {0xF0, 0x10, 0xF0, 0x80, 0xF0};
inline constexpr data_t CHAR_3 = {0xF0, 0x10, 0xF0, 0x10, 0xF0};
inline constexpr data_t CHAR_4 = {0x90, 0x90, 0xF0, 0x10, 0x10};
inline constexpr data_t CHAR_5 = {0xF0, 0x80, 0xF0, 0x10, 0xF0};
inline constexpr data_t CHAR_6 = {0xF0, 0x80, 0xF0, 0x90, 0xF0};
inline constexpr data_t CHAR_7 = {0xF0, 0x10, 0x20, 0x40, 0x40};
inline constexpr data_t CHAR_8 = {0xF0, 0x90, 0xF0, 0x90, 0xF0};
inline constexpr data_t CHAR_9 = {0xF0, 0x90, 0xF0, 0x10, 0xF0};
inline constexpr data_t CHAR_A = {0xF0, 0x90, 0xF0, 0x90, 0x90};
inline constexpr data_t CHAR_B = {0xE0, 0x90, 0xE0, 0x90, 0xE0};
inline constexpr data_t CHAR_C = {0xF0, 0x80, 0x80, 0x80, 0xF0};
inline constexpr data_t CHAR_D = {0xE0, 0x90, 0x90, 0x90, 0xE0};
inline constexpr data_t CHAR_E = {0xF0, 0x80, 0xF0, 0x80, 0xF0};
inline constexpr data_t CHAR_F = {0xF0, 0x80, 0xF0, 0x80, 0x80};

} // namespace characters

} // namespace sic
